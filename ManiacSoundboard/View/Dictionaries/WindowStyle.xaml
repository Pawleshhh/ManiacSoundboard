<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:local="clr-namespace:ManiacSoundboard">

    <!--=============Brushes=============-->

    <SolidColorBrush x:Key="Window.Background" Color="#617380"/>
    <SolidColorBrush x:Key="Window.Foreground" Color="Black"/>
    <SolidColorBrush x:Key="Window.Caption.Background" Color="#2f2f36"/>
    <SolidColorBrush x:Key="Window.Caption.Foreground" Color="#ff6161"/>
    
    <SolidColorBrush x:Key="WindowButton.Static.Background" Color="#2f2f36"/>
    <SolidColorBrush x:Key="WindowButton.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowButton.MouseOver.Background" Color="Red"/>
    <SolidColorBrush x:Key="WindowButton.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowButton.Pressed.Background" Color="Green"/>
    <SolidColorBrush x:Key="WindowButton.Pressed.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="WindowButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="WindowButton.Disabled.Foreground" Color="#FF838383"/>

    <SolidColorBrush x:Key="WindowMinimizeButton.Static.Background" Color="CadetBlue"/>
    <SolidColorBrush x:Key="WindowMinimizeButton.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowMinimizeButton.MouseOver.Background" Color="Yellow"/>
    <SolidColorBrush x:Key="WindowMinimizeButton.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowMinimizeButton.Pressed.Background" Color="#ffd11a"/>
    <SolidColorBrush x:Key="WindowMinimizeButton.Pressed.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowMinimizeButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="WindowMinimizeButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="WindowMinimizeButton.Disabled.Foreground" Color="#FF838383"/>

    <SolidColorBrush x:Key="WindowMaximizeButton.Static.Background" Color="CadetBlue"/>
    <SolidColorBrush x:Key="WindowMaximizeButton.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowMaximizeButton.MouseOver.Background" Color="LightGreen"/>
    <SolidColorBrush x:Key="WindowMaximizeButton.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowMaximizeButton.Pressed.Background" Color="#00b33c"/>
    <SolidColorBrush x:Key="WindowMaximizeButton.Pressed.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowMaximizeButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="WindowMaximizeButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="WindowMaximizeButton.Disabled.Foreground" Color="#FF838383"/>

    <SolidColorBrush x:Key="WindowCloseButton.Static.Background" Color="CadetBlue"/>
    <SolidColorBrush x:Key="WindowCloseButton.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowCloseButton.MouseOver.Background" Color="PaleVioletRed"/>
    <SolidColorBrush x:Key="WindowCloseButton.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="WindowCloseButton.Pressed.Background" Color="Red"/>
    <SolidColorBrush x:Key="WindowCloseButton.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="WindowCloseButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="WindowCloseButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="WindowCloseButton.Disabled.Foreground" Color="#FF838383"/>

    <!--=============Buttons=============-->

    <!--Base style for the window buttons-->
    <Style TargetType="{x:Type Button}" x:Key="WindowButtonsBaseStyle">
        <!--Control size-->
        <!--<Setter Property="Width" Value="45"/>-->
        <Setter Property="BorderThickness" Value="0"/>
        <!--Border-->
        <Setter Property="BorderBrush" Value="{StaticResource WindowButton.Static.Border}"/>
        <!--Colors-->
        <Setter Property="Background" Value="{StaticResource WindowButton.Static.Background}"/>
        <Setter Property="Foreground" Value="White"/>
        <!--Font-->
        <Setter Property="FontSize" Value="16"/>
        <!--Cursor-->
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowButton.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowButton.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource WindowButton.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--Style for the minimize window button-->
    <Style TargetType="{x:Type Button}" x:Key="WindowMinimizeButtonStyle" BasedOn="{StaticResource WindowButtonsBaseStyle}">
        <!--<Setter Property="Background" Value="{StaticResource WindowMinimizeButton.Static.Background}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowMinimizeButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowMinimizeButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowMinimizeButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowMinimizeButton.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowMinimizeButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowMinimizeButton.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource WindowMinimizeButton.Disabled.Foreground}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="#036652" To="#95b82a" 
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" 
                                                    FillBehavior="HoldEnd" 
                                                    Duration="0:0:0.250"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style for the maximize window button-->
    <Style TargetType="{x:Type Button}" x:Key="WindowMaximizeButtonStyle" BasedOn="{StaticResource WindowButtonsBaseStyle}">
        <!--<Setter Property="Background" Value="{StaticResource WindowMaximizeButton.Static.Background}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowMaximizeButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowMaximizeButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowMaximizeButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowMaximizeButton.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowMaximizeButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowMaximizeButton.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource WindowMaximizeButton.Disabled.Foreground}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="#036652" To="LightGreen" 
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" 
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.250"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style for the window close button-->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButtonBaseStyle" BasedOn="{StaticResource WindowButtonsBaseStyle}">
        <!--<Setter Property="Background" Value="{StaticResource WindowCloseButton.Static.Background}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowCloseButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowCloseButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowCloseButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowCloseButton.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WindowCloseButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WindowCloseButton.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource WindowCloseButton.Disabled.Foreground}"/>
                        </Trigger>
                        <DataTrigger
                            Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                            <Setter Property="CornerRadius" TargetName="border" Value="0, 0, 0, 0"/>
                        </DataTrigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="#036652" To="PaleVioletRed"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" 
                                                    FillBehavior="HoldEnd" 
                                                    Duration="0:0:0.250"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--=============TitleTextBlock=============-->

    <Style TargetType="{x:Type TextBlock}" x:Key="WindowTitleTextBlockStyle">
        <!--Font-->
        <Setter Property="FontSize" Value="18"/>
        <!--Colors-->
        <Setter Property="Foreground" Value="{StaticResource Window.Caption.Foreground}"/>
    </Style>

    <!--=============App window template=============-->
    <Style TargetType="{x:Type local:MainWindow}" x:Key="AppMainWindowStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderThickness="2">
                        <Border.Effect>
                            <DropShadowEffect Color="Pink" BlurRadius="50" Opacity="0.5"/>
                        </Border.Effect>
                        <!--Main border-->
                        <Border Background="{StaticResource Window.Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" x:Name="InnerBorder">
                            <Border.Resources>
                                <!--<Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                            <Setter Property="Margin" Value="7, 0, 7, 0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>-->
                            </Border.Resources>
                            <Grid x:Name="WindowGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!--Grid of caption-->
                                <Border Background="{StaticResource Window.Caption.Background}">
                                    <Grid x:Name="CaptionGrid" Grid.Row="0" Style="{DynamicResource CaptionGridStyle}">
                                        <Grid.Resources>
                                            <Style TargetType="{x:Type Grid}" x:Key="CaptionGridStyle">
                                                <Setter Property="Margin" Value="0"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                                        <Setter Property="Margin" Value="0, 5, 0, 0"/>
                                                    </DataTrigger>
                                                </Style.Triggers>

                                            </Style>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="75"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="120"/>
                                        </Grid.ColumnDefinitions>

                                        <!--Icon-->
                                        <Image Grid.Column="0" Margin="2" Source="{TemplateBinding Icon}"/>

                                        <!--Title-->
                                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{TemplateBinding Title}"
                                                   Style="{StaticResource WindowTitleTextBlockStyle}"/>

                                        <!--Buttons-->
                                        <Grid Grid.Column="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>

                                            <!--Minimize button-->
                                            <Button Style="{StaticResource WindowMinimizeButtonStyle}" Content="_">
                                                <i:Interaction.Behaviors>
                                                    <local:WindowStateBehavior WindowButtonRole="Minimize"/>
                                                </i:Interaction.Behaviors>
                                            </Button>

                                            <!--Maximize button-->
                                            <Button Grid.Column="1" Style="{StaticResource WindowMaximizeButtonStyle}" Content="[]">
                                                <i:Interaction.Behaviors>
                                                    <local:WindowStateBehavior WindowButtonRole="Maximize"/>
                                                </i:Interaction.Behaviors>
                                            </Button>

                                            <!--Close button-->
                                            <Button Grid.Column="2" Style="{StaticResource WindowCloseButtonBaseStyle}" Content="X">
                                                <i:Interaction.Behaviors>
                                                    <local:WindowStateBehavior WindowButtonRole="Close"/>
                                                </i:Interaction.Behaviors>
                                            </Button>

                                        </Grid>

                                    </Grid>
                                </Border>

                                <Border Grid.Row="1">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                                    <Setter Property="Margin" Value="5, 0, 5, 5"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                </Border>

                            </Grid>

                        </Border>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>